name: FastAPI CI/CD Secure Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-push:
    name: 🚀 Build, Test, Migrate, Push
    runs-on: ubuntu-latest

    steps:
      - name: 🛒 Checkout Repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 📄 Inject .env.ci from Secret
        run: echo "${{ secrets.ENV_CI_FILE }}" > .env.ci

      - name: ✅ Load Environment Variables
        run: |
          set -a
          source .env.ci
          set +a

      - name: 🐳 Launch PostgreSQL with Secure Credentials
        run: |
          docker run -d \
            --name pg-test \
            -e POSTGRES_USER=$DB_USER \
            -e POSTGRES_PASSWORD=$DB_PASSWORD \
            -e POSTGRES_DB=$DB_NAME \
            -p 5432:5432 \
            postgres:16

      - name: 🐘 Wait for PostgreSQL to be ready
        run: |
          sleep 10  # crude but effective
          docker exec pg-test pg_isready

      - name: 🐘 Install PostgreSQL Client
        run: |
          sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: 🔌 Test DB Connection
        run: |
          export PGPASSWORD=$DB_PASSWORD
          psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -c '\l'

      - name: 🛠 Run Alembic Migrations
        run: |
          export SYNC_DATABASE_URL="postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"
          alembic upgrade head

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🛠 Build Docker Image
        run: |
          docker build -t damolaajayi/fastapiapp:latest .

      - name: 📦 Push Docker Image
        run: |
          docker push damolaajayi/fastapiapp:latest
